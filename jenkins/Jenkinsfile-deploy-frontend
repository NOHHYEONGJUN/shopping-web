pipeline {
    agent { label 'capstone-node' }
    
    environment {
        SERVER_IP = credentials('jcloud-ip')
        SSH_PORT = credentials('backend-server-port')
        DOCKER_IMAGE = "0b6fa52889bf.ngrok.app/cluster/frontend"
        DOCKER_TAG = "v${env.BUILD_NUMBER}"
        SCANNER_HOME = tool 'SonarQube Scanner'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Cleanup') {
            steps {
                sh 'rm -rf node_modules'
                sh 'rm -f package-lock.json'
                sh 'docker system prune -af'
            }
        }
        
        stage('Install Dependencies') {
            agent {
                docker {
                    image 'node:14'
                    args '-v jenkins-npm-cache:/root/.npm'  // 중복 마운트 제거
                }
            }
            steps {
                dir('frontend') {
                    sh 'npm ci'
                }
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                script {
                    def customImage = docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", "-f frontend/Dockerfile --no-cache ./frontend")
                    docker.withRegistry('https://0b6fa52889bf.ngrok.app', 'harbor-hyeongjun') {
                        customImage.push()
                    }
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}