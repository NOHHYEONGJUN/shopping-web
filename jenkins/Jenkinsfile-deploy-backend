pipeline {
    agent any
    
    environment {
        SERVER_IP = credentials('jcloud-ip')
        SSH_PORT = credentials('backend-server-port')
        DOCKER_IMAGE = "nohhye/backend"  // 예: johndoe/frontend
        DOCKER_TAG = "v${env.BUILD_NUMBER}"
        SCANNER_HOME = tool 'SonarQube Scanner'
        DOCKERHUB_CREDENTIALS = credentials('docker-hub') // Jenkins에 등록한 도커허브 인증 정보
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        
    stage('Cleanup') {
        steps {
            sh 'rm -rf node_modules'
            sh 'rm -f package-lock.json'
        }
    }
        
        stage('Install Dependencies') {
            agent {
                docker {
                    image 'node:14'
                    args '-v $HOME/.npm:/root/.npm'
                }
            }
            steps {
                dir('backend') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", "-f backend/Dockerfile ./backend")
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }
    }
}